---
- name: Configure repository
  include_tasks: ../../../../tasks/enable_repo.yml

- name: install Percona Platform for PostgreSQL deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
    - percona-postgresql
    - percona-postgresql-15
    - percona-postgresql-all
    - percona-postgresql-client
    - percona-postgresql-client-15
    - percona-postgresql-client-common
    - percona-postgresql-common
    - percona-postgresql-contrib
    - percona-postgresql-server-dev-15
    - percona-postgresql-server-dev-all
  when: ansible_os_family == "Debian"

- name: DNF disable postgresql RHEL
  command: sudo dnf module disable postgresql -y
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: DNF clean
  command: sudo dnf clean all -y
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: install Percona Platform for PostgreSQL rpm packages for RHEL
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - percona-postgresql-client-common
      - percona-postgresql-common
      - percona-postgresql-server-dev-all
      - percona-postgresql15
      - percona-postgresql15-contrib
      - percona-postgresql15-devel
      - percona-postgresql15-libs
      - percona-postgresql15-llvmjit
      - percona-postgresql15-server
  when: ansible_os_family == "RedHat"

- name: Initialize Postgres RHEL
  command: /usr/pgsql-15/bin/postgresql-15-setup initdb
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  when: ansible_os_family == "RedHat"

- name: Start Postgres RHEL
  service:
    name: postgresql-15
    state: started
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Restart Postgres RHEL
  service:
    name: postgresql-15
    state: restarted
  when: ansible_os_family == "RedHat"

- name: Restart Postgres Debian
  command: sudo systemctl restart postgresql
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  when: ansible_os_family == "Debian"

- name: Install pdg rhel7
  yum: name=https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm state=present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Add PostgreSQL YUM Repository RHEL8
  yum: name=https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm state=present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: install postgis RHEL based 8
  dnf:
    name: postgis30_12
    state: latest
    enablerepo: PowerTools
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: install postgis RHEL based 7
  yum:
    name: postgis25_12
    state: latest
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: postgresql key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  when: ansible_os_family == "Debian"

- name: create variable
  command: bash -c "echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" "
  register: repo_line
  when: ansible_os_family == "Debian"

- name: add postgresql repo
  apt_repository:
    repo: "{{ repo_line.stdout }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Install PostGIS
  apt: pkg=postgresql-15-postgis-2.5 state=present

  when: ansible_os_family == "Debian"
