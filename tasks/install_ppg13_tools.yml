  - name: Setup additional yum packages
    yum:
      name: "{{ packages }}"
      update_cache: yes
      state: present
    vars:
      packages:
        - yum-utils
        - centos-release-scl
    when: ansible_os_family == "RedHat"


  - name: setup devtoolset-7-gcc
    yum:
      name: devtoolset-7-gcc*
      update_cache: yes
      enablerepo: centos-sclo-rh-testing
      state: present
    when: ansible_os_family == "RedHat"


  - name: Install additional packages RPM
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - openssl-devel
      - llvm-toolset-7-clang
      - llvm5.0
      - llvm-toolset-7
      - readline-devel
      - gcc
      - gcc-c++
      - libevent-devel
      - pandoc
      - libtool
    when: ansible_os_family == "RedHat"

  - name: Install pgaudit Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-postgresql-13-pgaudit
        - percona-postgresql-13-pgaudit-dbgsym
    when: ansible_os_family == "Debian"

  - name: Install pgaudit RHEL
    yum:
      name: percona-pgaudit
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install pgbackrest Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pgbackrest
        - percona-pgbackrest-doc
        - percona-pgbackrest-dbgsym
    when: ansible_os_family == "Debian"

  - name: Install pgbackrest RHEL
    yum:
      name: percona-pgbackrest
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Create pgbackrest directory
    file:
      path: /etc/pgbackrest/
      state: directory


  - name: Create pgbackrest configuration Debian
    blockinfile:
      path: /etc/pgbackrest/pgbackrest.conf
      create: yes
      block: |
        [global]
        repo1-path=/var/lib/pgbackrest

        [testing]
        pg1-path=/var/lib/postgresql/13/main
        pg1-port=5432
    when: ansible_os_family == "Debian"

  - name: Create pgbackrest configuration RHEL
    blockinfile:
      path: /etc/pgbackrest/pgbackrest.conf
      create: yes
      block: |
        [global]
        repo1-path=/var/lib/pgbackrest

        [testing]
        pg1-path=/var/lib/pgsql/13/data
        pg1-port=5432
    when: ansible_os_family == "RedHat"


  - name: Configure backup config for Debian
    blockinfile:
      path: /etc/postgresql/13/main/postgresql.conf
      block: |
        archive_mode = on
        archive_command = 'pgbackrest --stanza=testing archive-push %p'
        max_wal_senders = 3
        wal_level = replica
    when: ansible_os_family == "Debian"

  - name: Configure backup config for RHEL
    blockinfile:
      path: /var/lib/pgsql/13/data/postgresql.conf
      block: |
        archive_mode = on
        archive_command = 'pgbackrest --stanza=testing archive-push %p'
        max_wal_senders = 3
        wal_level = replica
    when: ansible_os_family == "RedHat"


  - name: Restart Postgres RHEL
    service:
      name: postgresql-13
      state: restarted
    when: ansible_os_family == "RedHat"

  - name: Restart Postgres Debian
    command: sudo systemctl restart postgresql
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "Debian"

  - name: Install pgrepack Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-postgresql-13-repack
        - percona-postgresql-13-repack-dbgsym
    when: ansible_os_family == "Debian"

  - name: Install pgrepack RHEL
    yum:
      name: percona-pg_repack13
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"


  - name: Install patroni RPM
    yum:
      name: percona-patroni
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install patroni debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-patroni
        - percona-patroni-doc
    when: ansible_os_family == "Debian"

  - name: Install pg-stat-monitor RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pg-stat-monitor13
        - percona-pg-stat-monitor13-debuginfo
    when: ansible_os_family == "RedHat"

  - name: Install pg-stat-monitor debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pg-stat-monitor13
        - percona-pg-stat-monitor13-dbgsym
    when: ansible_os_family == "Debian"

  - name: Install pgbadger RHEL
    yum:
      name: percona-pgbadger
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install pgbadger Debian
    apt:
      name: percona-pgbadger
      state: latest
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Install percona-pgaudit13_set_user RHEL
    yum:
      name: percona-pgaudit13_set_user
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-pgaudit13_set_user Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pgaudit13-set-user
        - percona-pgaudit13-set-user-dbgsym

  - name: Install percona-pgbouncer RHEL
    yum:
      name: percona-pgbouncer
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-pgbouncer Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pgbouncer
        - percona-pgbouncer-dbgsym

  - name: Install percona-wal2json13 RHEL
    yum:
      name: percona-wal2json13
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-wal2json13 Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-postgresql-13-wal2json
        - percona-postgresql-13-wal2json-dbgsym

  - name: Add extensions to postgresql.conf for Debian
    lineinfile:
      path: /etc/postgresql/13/main/postgresql.conf
      line: shared_preload_libraries = 'pg_stat_monitor, pgaudit, set_user'
    when: ansible_os_family == "Debian"

  - name: Add extensions to postgresql.conf for RHEL
    lineinfile:
      path: /var/lib/pgsql/13/data/postgresql.conf
      line: shared_preload_libraries = 'pg_stat_monitor, pgaudit, set_user'
    when: ansible_os_family == "RedHat"

  - name: Clone pgaudit sources
    git:
      repo: https://github.com/pgaudit/pgaudit.git
      version: 1.5.0
      dest: /tmp/pg_audit
    become_user: postgres

  - name: Clone pg_repack sources
    git:
      repo: https://github.com/reorg/pg_repack.git
      version: ver_1.4.6
      dest: /tmp/pg_repack
    become_user: postgres

  - name: Clone pg_stat_monitor sources
    git:
      repo: https://github.com/percona/pg_stat_monitor.git
      version: REL0_8_1
      dest: /tmp/pg_stat_monitor
    become_user: postgres

  - name: Remove pg_hba.conf debian
    file:
      path: /var/lib/pgsql/13/data/pg_hba.conf
      state: absent
    when: ansible_os_family == "RedHat"


  - name: Remove pg_hba.conf debian
    file:
      path: /etc/postgresql/13/main/pg_hba.conf
      state: absent
    when: ansible_os_family == "Debian"

  - name: Edit pg_hba.conf RHEL
    blockinfile:
      path: /var/lib/pgsql/13/data/pg_hba.conf
      create: yes
      owner: postgres
      block: |
        local   all             all                                     trust
        host    all             all             127.0.0.1/32            trust
        host    all             all             ::1/128                 trust
        local   replication     all                                     trust
        host    replication     all             127.0.0.1/32            trust
        host    replication     all             ::1/128                 trust
    when: ansible_os_family == "RedHat"

  - name: Edit pg_hba.conf Debian
    blockinfile:
      create: yes
      owner: postgres
      path: /etc/postgresql/13/main/pg_hba.conf
      block: |
        local   all             all                                     trust
        host    all             all             127.0.0.1/32            trust
        host    all             all             ::1/128                 trust
        local   replication     all                                     trust
        host    replication     all             127.0.0.1/32            trust
        host    replication     all             ::1/128                 trust
    when: ansible_os_family == "Debian"

  - name: Clone pgbadger sources
    git:
      repo: https://github.com/darold/pgbadger.git
      version: v11.5
      dest: /tmp/pgbadger
    become_user: postgres

  - name: Make perl for pgbadger
    shell: perl Makefile.PL
    args:
      chdir: /tmp/pgbadger

  - name: Clone set_user sources
    git:
      repo: https://github.com/pgaudit/set_user.git
      version: REL2_0_0
      dest: /tmp/set_user
    become_user: postgres

  - name: Clone pgbouncer sources
    git:
      repo: https://github.com/pgbouncer/pgbouncer.git
      version: pgbouncer_1_15_0
      dest: /tmp/pgbouncer
      recursive: yes
      update: yes
    become_user: postgres

  - name: Clone wal2json sources
    git:
      repo: https://github.com/eulerto/wal2json.git
      version: wal2json_2_3
      dest: /tmp/wal2json
    become_user: postgres

  - name: Restart Postgres RHEL
    service:
      name: postgresql-13
      state: restarted
    when: ansible_os_family == "RedHat"
    register: out

  - name: Restart Postgres Debian
    command: sudo systemctl restart postgresql
    environment:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    when: ansible_os_family == "Debian"
