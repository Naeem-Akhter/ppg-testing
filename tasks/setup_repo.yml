  - name: Install percona repository package
    apt:
     deb: https://repo.percona.com/apt/pool/testing/p/percona-release/percona-release_1.0-27.generic_all.deb
    when: ansible_os_family == "Debian"

  - name: Install percona-release
#    yum: name=https://repo.percona.com/yum/testing/latest/RPMS/noarch/percona-release-1.0-27.noarch.rpm
    command: yum -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    args:
      warn: no
    when: ansible_os_family == "RedHat"

  - name: clean and update yum cache
    shell: |
      yum clean all
      yum makecache
    when: ansible_os_family == "RedHat"

  - set_fact:
      major_repo: "{{ lookup('env', 'MAJOR_REPO') }}"

  - name: setup repo with percona-release ppg-{{ version }} with minor prefix
    command: percona-release setup ppg-{{ version }}
    vars:
      repo: "{{ lookup('env', 'REPO') }}"
      version: "{{ lookup('env', 'VERSION') }}"
    when: not major_repo

  - name: setup repo with percona-release ppg-{{ version }}
    command: percona-release setup ppg-{{ version }}
    vars:
      repo: "{{ lookup('env', 'REPO') }}"
      version: "{{ lookup('env', 'VERSION').split('.')[0].split('-')[1] }}"
    when: major_repo

#  - name: setup repo with percona-release
#    command: percona-release setup {{ pg_version }}
#    vars:
#      pg_version: "{{ lookup('env', 'VERSION') }}"
